<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold text-gray-800 mb-6">Gestion des Produits</h1>

  <!-- Erreur globale -->
  <div *ngIf="errorMessage" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
    <strong>Erreur :</strong> {{ errorMessage }}
    <button (click)="errorMessage = ''" class="float-right font-bold">&times;</button>
  </div>

  <!-- Barre de recherche + Bouton Ajouter -->
  <div class="flex flex-col md:flex-row justify-between items-center mb-6 gap-4">
    <input
      type="text"
      [(ngModel)]="searchTerm"
      placeholder="Rechercher par nom ou description..."
      class="w-full md:w-1/2 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
    />
    <button
      (click)="toggleForm()"
      class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded-lg transition duration-200"
    >
      <span *ngIf="!showForm">+ Ajouter un Produit</span>
      <span *ngIf="showForm">Fermer le Formulaire</span>
    </button>
  </div>

  <!-- Formulaire Ajout/Modification (inline avec toggle) -->
  <div *ngIf="showForm" class="bg-white shadow-md rounded-lg p-6 mb-6">
    <h2 class="text-2xl font-semibold text-gray-700 mb-4">
      {{ isEditing ? 'Modifier le Produit' : 'Ajouter un Nouveau Produit' }}
    </h2>
    <form [formGroup]="productForm" (ngSubmit)="onSubmit()" class="space-y-4">
      <div>
        <label class="block text-gray-700 font-medium mb-2">Nom du Produit *</label>
        <input
          formControlName="name"
          type="text"
          class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
          [class.border-red-500]="productForm.get('name')?.invalid && productForm.get('name')?.touched"
        />
        <div *ngIf="productForm.get('name')?.invalid && productForm.get('name')?.touched" class="text-red-500 text-sm mt-1">
          Le nom est obligatoire.
        </div>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="block text-gray-700 font-medium mb-2">Prix (€) *</label>
          <input
            formControlName="price"
            type="number"
            step="0.01"
            class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
            [class.border-red-500]="productForm.get('price')?.invalid && productForm.get('price')?.touched"
          />
          <div *ngIf="productForm.get('price')?.invalid && productForm.get('price')?.touched" class="text-red-500 text-sm mt-1">
            Le prix doit être supérieur à 0.
          </div>
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-2">Quantité *</label>
          <input
            formControlName="quantity"
            type="number"
            class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
            [class.border-red-500]="productForm.get('quantity')?.invalid && productForm.get('quantity')?.touched"
          />
          <div *ngIf="productForm.get('quantity')?.invalid && productForm.get('quantity')?.touched" class="text-red-500 text-sm mt-1">
            La quantité doit être au moins 1.
          </div>
        </div>
      </div>
      <div>
        <label class="block text-gray-700 font-medium mb-2">Description</label>
        <textarea
          formControlName="description"
          rows="3"
          class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
        ></textarea>
      </div>
      <div class="flex gap-4">
        <button
          type="submit"
          [disabled]="isLoading || productForm.invalid"
          class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg transition duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed"
        >
          <span *ngIf="isLoading">Enregistrement...</span>
          <span *ngIf="!isLoading">{{ isEditing ? 'Mettre à jour' : 'Ajouter' }}</span>
        </button>
        <button
          type="button"
          (click)="resetForm()"
          class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg transition duration-200"
        >
          Annuler
        </button>
      </div>
    </form>
  </div>

  <!-- Loading state -->
  <div *ngIf="isLoading && !showForm" class="text-center py-8">
    <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
    <p class="text-gray-600 mt-4">Chargement...</p>
  </div>

  <!-- Liste des produits (table responsive) -->
  <div *ngIf="!isLoading" class="bg-white shadow-md rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom</th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prix (€)</th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantité</th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
          <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200" *ngIf="filteredProducts$ | async as products">
        <tr *ngFor="let product of products" class="hover:bg-gray-50 transition duration-150">
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ product.name }}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ product.price | number:'1.2-2' }} €</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ product.quantity }}</td>
          <td class="px-6 py-4 text-sm text-gray-500">{{ product.description || 'N/A' }}</td>
          <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <button
              (click)="editProduct(product)"
              class="text-indigo-600 hover:text-indigo-900 mr-4 transition duration-150"
            >
              Modifier
            </button>
            <button
              (click)="deleteProduct(product.id!, product.name)"
              class="text-red-600 hover:text-red-900 transition duration-150"
            >
              Supprimer
            </button>
          </td>
        </tr>
        <tr *ngIf="products.length === 0">
          <td colspan="5" class="px-6 py-8 text-center text-gray-500">
            <p class="text-lg">Aucun produit trouvé.</p>
            <p class="text-sm mt-2">{{ searchTerm ? 'Essayez un autre terme de recherche.' : 'Ajoutez votre premier produit !' }}</p>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
