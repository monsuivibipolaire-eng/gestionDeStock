<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold text-gray-800 mb-6">Gestion des Produits</h1>

  <div *ngIf="errorMessage" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
    <strong>Erreur :</strong> {{ errorMessage }}
    <button (click)="errorMessage = ''" class="float-right">&times;</button>
  </div>

  <!-- Barre recherche + boutons -->
  <div class="flex flex-col md:flex-row justify-between items-center mb-4 gap-4">
    <input type="text" [ngModel]="searchTerm" (ngModelChange)="onSearchChange($event)"
           placeholder="🔍 Rechercher par nom..." class="w-full md:w-1/3 px-4 py-2 border rounded-lg" />
    <div class="flex gap-2">
      <button (click)="printList()" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-6 rounded-lg flex items-center space-x-2 no-print">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"></path>
        </svg>
        <span>Imprimer Liste</span>
      </button>
      <button (click)="toggleForm()" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded-lg no-print">
        <span *ngIf="!showForm">+ Ajouter un Produit</span>
        <span *ngIf="showForm">Fermer</span>
      </button>
    </div>
  </div>

  <!-- Filtres Avancés (collapsible) -->
  <div class="bg-white shadow-md rounded-lg p-4 mb-6 no-print">
    <h3 class="text-lg font-semibold mb-3 flex items-center">
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
      </svg>
      Filtres Avancés
    </h3>
    
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <!-- Prix Min/Max -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Prix Min (DT)</label>
        <input type="number" [ngModel]="minPrice" (ngModelChange)="onMinPriceChange($event)" 
               placeholder="0" class="w-full px-3 py-2 border rounded-lg" />
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Prix Max (DT)</label>
        <input type="number" [ngModel]="maxPrice" (ngModelChange)="onMaxPriceChange($event)" 
               placeholder="1000" class="w-full px-3 py-2 border rounded-lg" />
      </div>
      
      <!-- Filtre Stock -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">État Stock</label>
        <select [ngModel]="stockFilter" (ngModelChange)="onStockFilterChange($event)" 
                class="w-full px-3 py-2 border rounded-lg">
          <option value="all">Tous</option>
          <option value="rupture">En Rupture (0)</option>
          <option value="low">Stock Bas (&lt; 10)</option>
          <option value="ok">Stock OK (≥ 10)</option>
        </select>
      </div>
      
      <!-- Tri -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Trier par</label>
        <select [ngModel]="sortBy" (ngModelChange)="onSortChange($event)" 
                class="w-full px-3 py-2 border rounded-lg">
          <option value="name">Nom {{ sortBy === 'name' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}</option>
          <option value="price">Prix {{ sortBy === 'price' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}</option>
          <option value="quantity">Quantité {{ sortBy === 'quantity' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}</option>
        </select>
      </div>
    </div>
    
    <div class="mt-4">
      <button (click)="clearFilters()" class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg">
        Réinitialiser Filtres
      </button>
    </div>
  </div>

  <!-- Formulaire Produit -->
  <div *ngIf="showForm" class="bg-white shadow-md rounded-lg p-6 mb-6 no-print">
    <h2 class="text-2xl font-semibold mb-4">{{ isEditing ? 'Modifier' : 'Nouveau' }} Produit</h2>
    <form [formGroup]="productForm" (ngSubmit)="onSubmit()" class="space-y-4">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
          <label class="block text-gray-700 font-medium mb-2">Nom *</label>
          <input formControlName="name" type="text" class="w-full px-4 py-2 border rounded-lg" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-2">Prix (DT) *</label>
          <input formControlName="price" type="number" step="0.01" class="w-full px-4 py-2 border rounded-lg" />
        </div>
        <div>
        <div>
          <label class="block text-gray-700 font-medium mb-2">Prix de Gros (DT)</label>
          <input formControlName="prixDeGros" type="number" step="0.01" class="w-full px-4 py-2 border rounded-lg" />
        </div>
          <label class="block text-gray-700 font-medium mb-2">Quantité *</label>
          <input formControlName="quantity" type="number" class="w-full px-4 py-2 border rounded-lg" />
        </div>
      </div>
      <div>
        <label class="block text-gray-700 font-medium mb-2">Description</label>
        <textarea formControlName="description" rows="2" class="w-full px-4 py-2 border rounded-lg"></textarea>
      </div>
      <div class="flex gap-4">
        <button type="submit" [disabled]="isLoading || productForm.invalid"
                class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg disabled:bg-gray-400">
          {{ isEditing ? 'Mettre à jour' : 'Ajouter' }}
        </button>
        <button type="button" (click)="resetForm()" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg">Annuler</button>
      </div>
    </form>
  </div>

  <!-- Table Produits -->
  <div *ngIf="!isLoading" class="bg-white shadow-md rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th (click)="onSortChange('name')" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase cursor-pointer hover:bg-gray-100">
            Nom {{ sortBy === 'name' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}
          </th>
          <th (click)="onSortChange('price')" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase cursor-pointer hover:bg-gray-100">
            Prix {{ sortBy === 'price' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}
          </th>
          <th (click)="onSortChange('quantity')" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase cursor-pointer hover:bg-gray-100">
            Quantité {{ sortBy === 'quantity' ? (sortOrder === 'asc' ? '↑' : '↓') : '' }}
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Description</th>
          <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase no-print">Actions</th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200" *ngIf="filteredProducts$ | async as products">
        <tr *ngFor="let product of products" class="hover:bg-gray-50">
          <td class="px-6 py-4 text-sm font-medium text-gray-900">{{ product.name }}</td>
          <td class="px-6 py-4 text-sm text-gray-500">{{ product.price | number:'1.2-2' }} DT</td>
          <td class="px-6 py-4 text-sm">
            <span [ngClass]="{
              'bg-red-100 text-red-800': (product.quantity || 0) === 0,
              'bg-yellow-100 text-yellow-800': (product.quantity || 0) > 0 && (product.quantity || 0) < 10,
              'bg-green-100 text-green-800': (product.quantity || 0) >= 10
            }" class="px-2 py-1 rounded">
              {{ product.quantity || 0 }}
            </span>
          </td>
          <td class="px-6 py-4 text-sm text-gray-500">{{ product.description || 'N/A' }}</td>
          <td class="px-6 py-4 text-right text-sm font-medium no-print">
            <button (click)="editProduct(product)" class="text-indigo-600 hover:text-indigo-900 mr-4">Modifier</button>
            <button (click)="deleteProduct(product.id!, product.name)" class="text-red-600 hover:text-red-900 mr-4">Supprimer</button>
            <button (click)="printItem(product)" class="text-purple-600 hover:text-purple-900">Imprimer</button>
          </td>
        </tr>
        <tr *ngIf="products.length === 0">
          <td colspan="5" class="px-6 py-8 text-center text-gray-500">Aucun produit trouvé.</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
